name: Run test cases

concurrency:
  group: test-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "*"
  pull_request:
  release:
    types:
      - published

jobs:
  run_test_case:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '1.20'
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        architecture: 'x64'
    - run: pip3 install pynng
    - name: run code static check
      run : |
        if [ ! -z "$(gofmt -l .)" ];then
          echo "code static check error"
          gofmt -l .
          exit 1
        fi
    - name: install lib
      env:
        DEBIAN_FRONTEND: noninteractive
      run: sudo apt-get update && sudo apt-get install libzmq3-dev -y
    - name: run test case
      run: |
        curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash > /dev/null && source $HOME/.wasmedge/env
        
        wget https://github.com/second-state/wasmedge_rustls_plugin/releases/download/0.1.0/WasmEdge-plugin-wasmedge_rustls-0.1.0-alpha-ubuntu20.04_x86_64.tar
        tar -xf "WasmEdge-plugin-wasmedge_rustls-0.1.0-alpha-ubuntu20.04_x86_64.tar"
        mv libwasmedge_rustls.so ~/.wasmedge/plugin/

        mkdir -p plugins/wasm
        set -e -u -x
        mkdir -p data
        mkdir -p log
        mkdir -p plugins/sinks
        sed -i -r "s/debug: .*/debug: true/1" etc/kuiper.yaml
        go build --buildmode=plugin -o plugins/sources/Random@v2.0.0.so extensions/sources/random/random.go
        cp extensions/sources/random/random.yaml etc/sources/random.yaml
        go build --buildmode=plugin -o plugins/functions/Echo.so extensions/functions/echo/echo.go
        go build --buildmode=plugin -o plugins/functions/CountPlusOne@v1.0.0.so extensions/functions/countPlusOne/countPlusOne.go
        go build --buildmode=plugin -o plugins/functions/AccumulateWordCount@v1.0.0.so extensions/functions/accumulateWordCount/accumulateWordCount.go
        go build --buildmode=plugin -o data/test/helloworld.so internal/converter/protobuf/test/*.go
        go build --buildmode=plugin -o data/myFormat.so internal/converter/custom/test/*.go
        cp data/myFormat.so data/test/myFormat.so
        mkdir -p plugins/portable/mirror
        cd sdk/go/example/mirror
        go build -o ../../../../plugins/portable/mirror/mirror .
        cp mirror.json ../../../../plugins/portable/mirror
        cd ../../../../
        cp -r sdk/python/example/pysam plugins/portable/pysam
        cp -r sdk/python/ekuiper plugins/portable/pysam/
        go test --tags="edgex script test" --cover -covermode=atomic -coverpkg=./... -coverprofile=coverage.out $(go list ./... | grep -v "github.com/lf-edge/ekuiper/internal/topo/topotest/plugin")
    - name: run plugins test case
      run: |
        mkdir -p data/test/uploads
        cp extensions/functions/dependencies/tensorflow/models/*  data/test/uploads/
        export CGO_CFLAGS=-I$(pwd)/extensions/functions/dependencies/tensorflow
        export CGO_LDFLAGS=-L$(pwd)/extensions/functions/dependencies/tensorflow/amd64
        export LD_LIBRARY_PATH=$(pwd)/extensions/functions/dependencies/tensorflow/amd64:$LD_LIBRARY_PATH
        cd extensions
        go test ./functions/...
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: stream.log
        path: log/stream.log
    - uses: actions/upload-artifact@v3
      with:
        name: coverprofile
        path: |
          *.out

  codecov:
    runs-on: ubuntu-latest
    needs:
      - run_test_case
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: coverprofile
      - name: Get cover files
        id: files
        run: |
          files="$(find -maxdepth 1 -name '*.out' -exec readlink -f '{}' ';' | tr '\n' ',' | sed 's/,$//g')"
          echo "files=$files" >> $GITHUB_OUTPUT
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ steps.files.outputs.files }} # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: true # optional (default = false)
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: coverprofile