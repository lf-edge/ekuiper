name: Run test coverage

concurrency:
  group: code-coverage-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "*"
  pull_request:
  release:
    types:
      - published

jobs:
  run_test_coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: '1.18'
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        architecture: 'x64'
    - run: pip3 install pynng
    - name: install lib
      run: sudo apt-get update && sudo apt-get install libzmq3-dev -y
    - name: run test coverage
      run: |
        curl -sSf https://raw.githubusercontent.com/WasmEdge/WasmEdge/master/utils/install.sh | bash > /dev/null && source $HOME/.wasmedge/env
        mkdir -p plugins/wasm
        set -e -u -x
        mkdir -p data
        mkdir -p log
        mkdir -p plugins/sinks
        sed -i -r "s/debug: .*/debug: true/1" etc/kuiper.yaml
        go build --buildmode=plugin -o plugins/sources/Random@v2.0.0.so extensions/sources/random/random.go
        cp extensions/sources/random/random.yaml etc/sources/random.yaml
        go build --buildmode=plugin -o plugins/functions/Echo.so extensions/functions/echo/echo.go
        go build --buildmode=plugin -o plugins/functions/CountPlusOne@v1.0.0.so extensions/functions/countPlusOne/countPlusOne.go
        go build --buildmode=plugin -o plugins/functions/AccumulateWordCount@v1.0.0.so extensions/functions/accumulateWordCount/accumulateWordCount.go
        go build --buildmode=plugin -o data/test/helloworld.so internal/converter/protobuf/test/*.go
        go build --buildmode=plugin -o data/test/myFormat.so internal/converter/custom/test/*.go
        mkdir -p plugins/portable/mirror
        cd sdk/go/example/mirror
        go build -o ../../../../plugins/portable/mirror/mirror .
        cp mirror.json ../../../../plugins/portable/mirror
        cd ../../../../
        cp -r sdk/python/example/pysam plugins/portable/pysam
        cp -r sdk/python/ekuiper plugins/portable/pysam/
        go test --tags="edgex script test" -cover $(go list ./... | grep -v "github.com/lf-edge/ekuiper/internal/service/test" | grep -v "github.com/lf-edge/ekuiper/internal/converter/protobuf/test" | grep -v "github.com/lf-edge/ekuiper/test" | grep -v "github.com/lf-edge/ekuiper/tools" | grep -v "github.com/lf-edge/ekuiper/internal/topo/topotest/plugin") -coverprofile coverage.out -coverpkg  ./...
        go tool cover -func coverage.out -o coverage.out
    - uses: actions/upload-artifact@v3
      with:
        name: coverage.out
        path: coverage.out

    - name: Go Coverage Badge
      uses: tj-actions/coverage-badge-go@v1
      if: ${{ runner.os == 'Linux'}} # Runs this on only one of the ci builds.
      with:
        green: 80
        filename: coverage.out

    - uses: stefanzweifel/git-auto-commit-action@v4
      id: auto-commit-action
      with:
        commit_message: Apply Code Coverage Badge
        skip_fetch: true
        skip_checkout: true
        file_pattern: ./README.md

    - name: Push Changes
      if: steps.auto-commit-action.outputs.changes_detected == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ github.token }}
        branch: ${{ github.ref }}